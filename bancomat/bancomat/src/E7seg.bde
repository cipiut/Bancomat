SCHM0102

HEADER
{
 FREEID 94
 VARIABLES
 {
  #ARCHITECTURE="arh"
  #BLOCKTABLE_FILE="#HDL2DIAGRAM.bde"
  #ENTITY="E7seg"
  #LANGUAGE="VHDL"
  AUTHOR="Cata"
  COMPANY="asd"
  CREATIONDATE="15-May-17"
  SOURCE="C:\\Users\\Catalin\\Desktop\\bancomat_PSN\\bancomat_PSN\\bancomat\\bancomat\\src\\afisare.vhd"
 }
 SYMBOL "bancomat" "decodificator_7seg" "decodificator_7seg"
 {
  HEADER
  {
   VARIABLES
   {
    #DESCRIPTION=""
    #HDL_ENTRIES=
"library IEEE;\n"+
"use ieee.std_logic_1164.all;"
    #LANGUAGE="VHDL"
    #MODIFIED="1494804329"
   }
  }
  PAGE "" 
  {
   PAGEHEADER
   {
    RECT (0,0,260,80)
    FREEID 6
   }
   
   BODY
   {
    RECT  1, -1, 0
    {
     VARIABLES
     {
      #OUTLINE_FILLING="1"
     }
     AREA (20,0,240,80)
    }
    TEXT  3, 0, 0
    {
     TEXT "$#NAME"
     RECT (25,26,25,58)
     ALIGN 4
     MARGINS (1,1)
     PARENT 2
    }
    TEXT  5, 0, 0
    {
     TEXT "$#NAME"
     RECT (235,26,235,58)
     ALIGN 6
     MARGINS (1,1)
     PARENT 4
    }
    PIN  2, 0, 0
    {
     COORD (0,40)
     VARIABLES
     {
      #DIRECTION="IN"
      #DOWNTO="1"
      #LENGTH="20"
      #NAME="bcd(3:0)"
      #NUMBER="0"
     }
     LINE  2, 0, 0
     {
      POINTS ( (0,0), (20,0) )
     }
    }
    PIN  4, 0, 0
    {
     COORD (260,40)
     VARIABLES
     {
      #DIRECTION="OUT"
      #DOWNTO="1"
      #LENGTH="20"
      #NAME="segment7(6:0)"
      #NUMBER="0"
     }
     LINE  2, 0, 0
     {
      POINTS ( (-20,0), (0,0) )
     }
    }
   }
  }
 }
}

PAGE ""
{
 PAGEHEADER
 {
  PAGESIZE (2012,5306)
  MARGINS (200,200,200,200)
  RECT (0,0,0,0)
 }
 
 BODY
 {
  VHDLDESIGNUNITHDR  1, 0, 0
  {
   LABEL "Design Unit Header"
   TEXT 
"library IEEE;\n"+
"use IEEE.STD_LOGIC_1164.ALL;\n"+
"use IEEE.std_logic_unsigned.ALL;"
   RECT (220,260,704,472)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  ARCHITECTUREDECLARATIONS  2, 0, 0
  {
   LABEL "Architecture Declaration"
   TEXT "type states is (s0, s1, s2, s3);"
   RECT (220,472,637,618)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  SIGNALASSIGN  3, 0, 0
  {
   LABEL "Statement_1"
   TEXT 
"process (present_state)\n"+
"\tbegin   \n"+
"    case present_state is\n"+
"        when s0 =>\n"+
"            outp <= \"0111\";\n"+
"            next_state <= s1;                \n"+
"        when s1 =>\n"+
"            outp <= \"1011\";\n"+
"            next_state <= s2;    \n"+
"        when s2 =>\n"+
"            outp <= \"1101\";\n"+
"            next_state <= s3;\n"+
"        when s3 =>\n"+
"            outp <= \"1110\";\n"+
"            next_state <= s0;\n"+
"    end case;\n"+
"\tend process;"
   RECT (220,691,705,1292)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  SIGNALASSIGN  4, 0, 0
  {
   LABEL "Statement_2"
   TEXT 
"process (clk)\n"+
"begin\n"+
"    if (rising_edge(clk)) then\n"+
"        present_state <= next_state;\n"+
"    end if;\n"+
"end process;"
   RECT (220,1365,705,1603)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  SIGNALASSIGN  5, 0, 0
  {
   LABEL "Statement_3"
   TEXT 
"process(outp)\n"+
"begin\n"+
"if (enable_afisare_card='1') then\n"+
"\tif enable_afisare_err='1' then\n"+
"\tcase outp is \n"+
"\t\twhen \"0111\" => s_an_decod<=\"1011\";\n"+
"\t\twhen \"1011\" => s_an_decod<=\"1011\";\n"+
"\t\twhen \"1101\" => s_an_decod<=\"1010\";\n"+
"\t\twhen others => s_an_decod<=\"1110\";\n"+
"\tend case;\n"+
"\telse \n"+
"\t\tcase outp is \n"+
"\t\twhen \"0111\" => s_an_decod<=citire_card(3 downto 0);\n"+
"\t\twhen \"1011\" => s_an_decod<=citire_card(7 downto 4);\n"+
"\t\twhen \"1101\" => s_an_decod<=citire_card(11 downto 8);\n"+
"\t\twhen others => s_an_decod<=citire_card(15 downto 12);\n"+
"\t\tend case ;\n"+
"\tend if;\n"+
"elsif enable_afisare_pin='1' then\n"+
"\tif enable_afisare_errp='1' then\n"+
"\tcase outp is \n"+
"\t\twhen \"0111\" => s_an_decod<=\"1011\";\n"+
"\t\twhen \"1011\" => s_an_decod<=\"1011\";\n"+
"\t\twhen \"1101\" => s_an_decod<=\"1010\";\n"+
"\t\twhen others => s_an_decod<=\"1110\";\n"+
"\tend case;\n"+
"\telse \n"+
"\tcase outp is \n"+
"\t\twhen \"0111\" => s_an_decod<=citire_pin(3 downto 0);\n"+
"\t\twhen \"1011\" => s_an_decod<=citire_pin(7 downto 4);\n"+
"\t\twhen \"1101\" => s_an_decod<=citire_pin(11 downto 8);\n"+
"\t\twhen others => s_an_decod<=citire_pin(15 downto 12);\n"+
"\tend case;\n"+
"\tend if;\n"+
"elsif enable_afis_pin_mod='1' then\n"+
"\t   case outp is \n"+
"\t\twhen \"0111\" => s_an_decod<=modificare_PIN(3 downto 0);\n"+
"\t\twhen \"1011\" => s_an_decod<=modificare_PIN(7 downto 4);\n"+
"\t\twhen \"1101\" => s_an_decod<=modificare_PIN(11 downto 8);\n"+
"\t\twhen others => s_an_decod<=modificare_PIN(15 downto 12);\n"+
"\tend case;\n"+
"elsif enable_afis_int_sold='1' then\n"+
"\t  case outp is \n"+
"\t\twhen \"0111\" => s_an_decod<=interogare_sold_afisare(3 downto 0);\n"+
"\t\twhen \"1011\" => s_an_decod<=interogare_sold_afisare(7 downto 4);\n"+
"\t\twhen \"1101\" => s_an_decod<=interogare_sold_afisare(11 downto 8);\n"+
"\t\twhen others => s_an_decod<=interogare_sold_afisare(15 downto 12);\n"+
"\tend case;\n"+
"elsif enable_afis_ret='1' then \n"+
"    if enable_afisare_err_dep_ret='1' then\n"+
"\tcase outp is \n"+
"\t\twhen \"0111\" => s_an_decod<=\"1011\";\n"+
"\t\twhen \"1011\" => s_an_decod<=\"1011\";\n"+
"\t\twhen \"1101\" => s_an_decod<=\"1010\";\n"+
"\t\twhen others => s_an_decod<=\"1110\";\n"+
"\tend case;\n"+
"\telse\n"+
"\t   case outp is \n"+
"\t\twhen \"0111\" => s_an_decod<=suma_dep_ret(3 downto 0);\n"+
"\t\twhen \"1011\" => s_an_decod<=suma_dep_ret(7 downto 4);\n"+
"\t\twhen \"1101\" => s_an_decod<=suma_dep_ret(11 downto 8);\n"+
"\t\twhen others => s_an_decod<=suma_dep_ret(15 downto 12);\n"+
"\tend case;\n"+
"\tend if;\n"+
"elsif  enable_afis_dep='1' then \n"+
" if enable_afisare_err_dep_ret='1' then\n"+
"   case outp is \n"+
"       when \"0111\" => s_an_decod<=\"1011\";\n"+
"       when \"1011\" => s_an_decod<=\"1011\";\n"+
"       when \"1101\" => s_an_decod<=\"1010\";\n"+
"       when others => s_an_decod<=\"1110\";\n"+
"   end case;\n"+
"   else\n"+
"\t   case outp is \n"+
"\t\twhen \"0111\" => s_an_decod<=suma_dep_ret(3 downto 0);\n"+
"\t\twhen \"1011\" => s_an_decod<=suma_dep_ret(7 downto 4);\n"+
"\t\twhen \"1101\" => s_an_decod<=suma_dep_ret(11 downto 8);\n"+
"\t\twhen others => s_an_decod<=suma_dep_ret(15 downto 12);\n"+
"\tend case;\n"+
"\tend if;\n"+
"\n"+
"else\n"+
"\tcase outp is \n"+
"            when \"0111\" => s_an_decod<=\"1110\";\n"+
"            when \"1011\" => s_an_decod<=\"1110\";\n"+
"            when \"1101\" => s_an_decod<=\"1110\";\n"+
"            when others => s_an_decod<=\"1110\";\n"+
"        end case; \n"+
"end if;\n"+
"end process;"
   RECT (220,1676,720,4686)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  INSTANCE  6, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="decodificator_7seg"
    #LIBRARY="bancomat"
    #REFERENCE="decod_7seg"
    #SYMBOL="decodificator_7seg"
   }
   COORD (1240,240)
   VERTEXES ( (4,58), (2,78) )
  }
  INSTANCE  7, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusOutput"
    #LIBRARY="#terminals"
    #REFERENCE="a_g(6:0)"
    #SYMBOL="BusOutput"
    #VHDL_TYPE="std_logic_vector"
   }
   COORD (1540,280)
   VERTEXES ( (2,59) )
  }
  INSTANCE  8, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Output"
    #LIBRARY="#terminals"
    #REFERENCE="anod1"
    #SYMBOL="Output"
    #VHDL_TYPE="STD_LOGIC"
   }
   COORD (1540,340)
   VERTEXES ( (2,62) )
  }
  INSTANCE  9, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Output"
    #LIBRARY="#terminals"
    #REFERENCE="anod2"
    #SYMBOL="Output"
    #VHDL_TYPE="STD_LOGIC"
   }
   COORD (1540,400)
   VERTEXES ( (2,66) )
  }
  INSTANCE  10, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Output"
    #LIBRARY="#terminals"
    #REFERENCE="anod3"
    #SYMBOL="Output"
    #VHDL_TYPE="STD_LOGIC"
   }
   COORD (1540,460)
   VERTEXES ( (2,70) )
  }
  INSTANCE  11, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Output"
    #LIBRARY="#terminals"
    #REFERENCE="anod4"
    #SYMBOL="Output"
    #VHDL_TYPE="STD_LOGIC"
   }
   COORD (1540,520)
   VERTEXES ( (2,74) )
  }
  INSTANCE  12, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #LIBRARY="#terminals"
    #REFERENCE="citire_card(15:0)"
    #SYMBOL="BusInput"
    #VHDL_TYPE="std_logic_vector"
   }
   COORD (1240,580)
  }
  INSTANCE  13, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #LIBRARY="#terminals"
    #REFERENCE="citire_pin(15:0)"
    #SYMBOL="BusInput"
    #VHDL_TYPE="std_logic_vector"
   }
   COORD (1240,640)
  }
  INSTANCE  14, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="clk"
    #SYMBOL="Input"
    #VHDL_TYPE="std_logic"
   }
   COORD (1240,700)
  }
  INSTANCE  15, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="enable_afis_dep"
    #SYMBOL="Input"
    #VHDL_TYPE="BIT"
   }
   COORD (1240,760)
  }
  INSTANCE  16, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="enable_afis_int_sold"
    #SYMBOL="Input"
    #VHDL_TYPE="BIT"
   }
   COORD (1240,820)
  }
  INSTANCE  17, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="enable_afis_pin_mod"
    #SYMBOL="Input"
    #VHDL_TYPE="BIT"
   }
   COORD (1240,880)
  }
  INSTANCE  18, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="enable_afis_ret"
    #SYMBOL="Input"
    #VHDL_TYPE="BIT"
   }
   COORD (1240,940)
  }
  INSTANCE  19, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="enable_afisare_card"
    #SYMBOL="Input"
    #VHDL_TYPE="BIT"
   }
   COORD (1240,1000)
  }
  INSTANCE  20, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="enable_afisare_err"
    #SYMBOL="Input"
    #VHDL_TYPE="BIT"
   }
   COORD (1240,1060)
  }
  INSTANCE  21, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="enable_afisare_err_dep_ret"
    #SYMBOL="Input"
    #VHDL_TYPE="BIT"
   }
   COORD (1240,1120)
  }
  INSTANCE  22, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="enable_afisare_errp"
    #SYMBOL="Input"
    #VHDL_TYPE="BIT"
   }
   COORD (1240,1180)
  }
  INSTANCE  23, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="Input"
    #LIBRARY="#terminals"
    #REFERENCE="enable_afisare_pin"
    #SYMBOL="Input"
    #VHDL_TYPE="BIT"
   }
   COORD (1240,1240)
  }
  INSTANCE  24, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #LIBRARY="#terminals"
    #REFERENCE="interogare_sold_afisare(15:0)"
    #SYMBOL="BusInput"
    #VHDL_TYPE="std_logic_vector"
   }
   COORD (1240,1300)
  }
  INSTANCE  25, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #LIBRARY="#terminals"
    #REFERENCE="modificare_PIN(15:0)"
    #SYMBOL="BusInput"
    #VHDL_TYPE="std_logic_vector"
   }
   COORD (1240,1360)
  }
  INSTANCE  26, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #LIBRARY="#terminals"
    #REFERENCE="suma_dep_ret(15:0)"
    #SYMBOL="BusInput"
    #VHDL_TYPE="std_logic_vector"
   }
   COORD (1240,1420)
  }
  TEXT  27, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1240,240,1240,240)
   ALIGN 8
   PARENT 6
  }
  TEXT  28, 0, 0
  {
   TEXT "$#COMPONENT"
   RECT (1240,320,1240,320)
   PARENT 6
  }
  TEXT  29, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1592,280,1592,280)
   ALIGN 4
   PARENT 7
  }
  TEXT  30, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1592,340,1592,340)
   ALIGN 4
   PARENT 8
  }
  TEXT  31, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1592,400,1592,400)
   ALIGN 4
   PARENT 9
  }
  TEXT  32, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1592,460,1592,460)
   ALIGN 4
   PARENT 10
  }
  TEXT  33, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1592,520,1592,520)
   ALIGN 4
   PARENT 11
  }
  TEXT  34, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,580,1188,580)
   ALIGN 6
   PARENT 12
  }
  TEXT  35, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,640,1188,640)
   ALIGN 6
   PARENT 13
  }
  TEXT  36, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,700,1188,700)
   ALIGN 6
   PARENT 14
  }
  TEXT  37, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,760,1188,760)
   ALIGN 6
   PARENT 15
  }
  TEXT  38, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,820,1188,820)
   ALIGN 6
   PARENT 16
  }
  TEXT  39, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,880,1188,880)
   ALIGN 6
   PARENT 17
  }
  TEXT  40, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,940,1188,940)
   ALIGN 6
   PARENT 18
  }
  TEXT  41, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,1000,1188,1000)
   ALIGN 6
   PARENT 19
  }
  TEXT  42, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,1060,1188,1060)
   ALIGN 6
   PARENT 20
  }
  TEXT  43, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,1120,1188,1120)
   ALIGN 6
   PARENT 21
  }
  TEXT  44, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,1180,1188,1180)
   ALIGN 6
   PARENT 22
  }
  TEXT  45, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,1240,1188,1240)
   ALIGN 6
   PARENT 23
  }
  TEXT  46, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,1300,1188,1300)
   ALIGN 6
   PARENT 24
  }
  TEXT  47, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,1360,1188,1360)
   ALIGN 6
   PARENT 25
  }
  TEXT  48, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1188,1420,1188,1420)
   ALIGN 6
   PARENT 26
  }
  NET WIRE  49, 0, 0
  {
   VARIABLES
   {
    #NAME="next_state"
    #VHDL_TYPE="states"
   }
  }
  NET WIRE  50, 0, 0
  {
   VARIABLES
   {
    #NAME="present_state"
    #VHDL_TYPE="states"
   }
  }
  NET BUS  51, 0, 0
  {
   VARIABLES
   {
    #NAME="s_an_decod(3:0)"
    #VHDL_TYPE="std_logic_vector"
   }
  }
  NET BUS  52, 0, 0
  {
   VARIABLES
   {
    #NAME="a_g(6:0)"
    #VHDL_TYPE="std_logic_vector"
   }
  }
  NET BUS  53, 0, 0
  {
   VARIABLES
   {
    #NAME="outp(0:3)"
    #VHDL_TYPE="std_logic_vector"
   }
  }
  NET WIRE  54, 0, 0
  {
   VARIABLES
   {
    #NAME="outp(1)"
   }
  }
  NET WIRE  55, 0, 0
  {
   VARIABLES
   {
    #NAME="outp(0)"
   }
  }
  NET WIRE  56, 0, 0
  {
   VARIABLES
   {
    #NAME="outp(3)"
   }
  }
  NET WIRE  57, 0, 0
  {
   VARIABLES
   {
    #NAME="outp(2)"
   }
  }
  VTX  58, 0, 0
  {
   COORD (1500,280)
  }
  VTX  59, 0, 0
  {
   COORD (1540,280)
  }
  BUS  60, 0, 0
  {
   NET 52
   VTX 58, 59
   VARIABLES
   {
    #NAMED="1"
   }
  }
  TEXT  61, 0, 1
  {
   TEXT "$#NAME"
   RECT (1520,280,1520,280)
   ALIGN 9
   PARENT 60
  }
  VTX  62, 0, 0
  {
   COORD (1540,340)
  }
  VTX  63, 0, 0
  {
   COORD (1520,340)
  }
  WIRE  64, 0, 0
  {
   NET 55
   VTX 62, 63
   VARIABLES
   {
    #NAMED="1"
   }
  }
  TEXT  65, 0, 1
  {
   TEXT "$#NAME"
   RECT (1530,340,1530,340)
   ALIGN 9
   PARENT 64
  }
  VTX  66, 0, 0
  {
   COORD (1540,400)
  }
  VTX  67, 0, 0
  {
   COORD (1520,400)
  }
  WIRE  68, 0, 0
  {
   NET 54
   VTX 66, 67
   VARIABLES
   {
    #NAMED="1"
   }
  }
  TEXT  69, 0, 1
  {
   TEXT "$#NAME"
   RECT (1530,400,1530,400)
   ALIGN 9
   PARENT 68
  }
  VTX  70, 0, 0
  {
   COORD (1540,460)
  }
  VTX  71, 0, 0
  {
   COORD (1520,460)
  }
  WIRE  72, 0, 0
  {
   NET 57
   VTX 70, 71
   VARIABLES
   {
    #NAMED="1"
   }
  }
  TEXT  73, 0, 1
  {
   TEXT "$#NAME"
   RECT (1530,460,1530,460)
   ALIGN 9
   PARENT 72
  }
  VTX  74, 0, 0
  {
   COORD (1540,520)
  }
  VTX  75, 0, 0
  {
   COORD (1520,520)
  }
  WIRE  76, 0, 0
  {
   NET 56
   VTX 74, 75
   VARIABLES
   {
    #NAMED="1"
   }
  }
  TEXT  77, 0, 1
  {
   TEXT "$#NAME"
   RECT (1530,520,1530,520)
   ALIGN 9
   PARENT 76
  }
  VTX  78, 0, 0
  {
   COORD (1240,280)
  }
  VTX  79, 0, 0
  {
   COORD (1220,280)
  }
  BUS  80, 0, 0
  {
   NET 51
   VTX 78, 79
   VARIABLES
   {
    #NAMED="1"
   }
  }
  TEXT  81, 0, 1
  {
   TEXT "$#NAME"
   RECT (1230,280,1230,280)
   ALIGN 9
   PARENT 80
  }
  VTX  82, 0, 0
  {
   COORD (1611,220)
  }
  VTX  83, 0, 0
  {
   COORD (1711,220)
  }
  WIRE  84, 0, 0
  {
   NET 49
   VTX 82, 83
   VARIABLES
   {
    #NAMED="1"
   }
  }
  TEXT  85, 0, 1
  {
   TEXT "$#NAME"
   RECT (1661,220,1661,220)
   ALIGN 9
   PARENT 84
  }
  VTX  86, 0, 0
  {
   COORD (1611,260)
  }
  VTX  87, 0, 0
  {
   COORD (1711,260)
  }
  WIRE  88, 0, 0
  {
   NET 50
   VTX 86, 87
   VARIABLES
   {
    #NAMED="1"
   }
  }
  TEXT  89, 0, 1
  {
   TEXT "$#NAME"
   RECT (1661,260,1661,260)
   ALIGN 9
   PARENT 88
  }
  VTX  90, 0, 0
  {
   COORD (1520,330)
  }
  VTX  91, 0, 0
  {
   COORD (1520,530)
  }
  BUS  92, 0, 0
  {
   NET 53
   VTX 90, 91
   BUSTAPS ( 63, 67, 71, 75 )
   VARIABLES
   {
    #NAMED="1"
   }
  }
  TEXT  93, 0, 1
  {
   TEXT "$#NAME"
   RECT (1520,430,1520,430)
   ALIGN 4
   PARENT 92
  }
 }
 
}

